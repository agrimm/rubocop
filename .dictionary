&
*
+
-
19
2
2nd
<
<<
<=>
=
=~
>
Array
DelegateClass
[]
a
abort
abs
absolute
access
accessible
accessor
accumulator
act
action
actual
add
adjust
after
alias
align
alignment
all
allow
allowed
already
alt
alternative
always
ambiguities
an
analyze
ancestor
ancestors
and
annotation
any
anything
apis
appearance
appearing
application
are
arg
arg1
args
argument
arguments
arity
around
arr
array
article
as
ascend
ascii
asgn
assign
assignment
assignments
assoc
associate
associated
ast
at
attr
attrs
auto
autocorrect
available
avoid
b
backref
backtrace
bad
banner
bar
base
based
basename
basenames
basic
be
before
beg
begin
between
binary
blacklist
blacklisted
blank
block
blocks
bodies
body
bom
boolean
both
brace
braces
bracket
brackets
branch
branches
break
broken
buffer
built
builtin
by
byebug
c
cache
calculate
call
callback
called
camel
capitalize
capture
captured
captures
case
casgn
catch
cfg
chain
change
changelog
char
character
chdir
check
checkable
child
children
chomp
chr
class
classes
clause
clean
clear
cli
clone
close
closed
closing
cnf
code
col
collection
colon
colons
color
colored
colorize
column
comma
command
commands
comment
comments
commissioner
common
compact
complex
complexity
concat
cond
condition
conditional
conf
config
configs
configuration
configure
cons
const
constant
constructor
consumed
consumer
contain
contains
content
contents
context
control
convention
convert
cop
cops
correct
corrected
correction
corrections
corrector
count
counts
create
cur
current
currentruby
custom
cv
cyan
data
debug
debugger
decision
declaration
declare
def
default
define
defined
definee
defs
delegation
delete
delimiter
delimiters
delta
deltas
deprecate
deprecated
derived
desc
describe
described
description
details
detected
determine
diagnostic
diagnostics
diff
different
digits
dir
directive
directory
dirname
dirs
disabled
disablement
dispatch
display
distance
div
do
dot
dotfile
double
downcase
drop
dropped
dup
e
each
elems
else
elsif
empty
enabled
encode
encoding
end
english
ensure
entries
env
eol
eq
eql
equal
equals
error
errors
escape
eval
even
everything
exact
exactly
examples
exc
exception
exclude
excludes
excluding
executable
exist
exit
exiting
exp
expand
expect
expected
explicit
exploded
expr
expression
expressions
exprs
extend
external
extname
f
fail
failed
failure
false
fatal
file
filename
files
filter
filtered
final
find
finder
finish
finished
first
fixed
flags
flat
flatten
flow
fnmatch
for
forces
format
formatted
formatter
formatter
formatters
formatting
found
freeze
from
frozen
full
function
gen
generated
get
getwd
given
global
go
good
green
grep
group
gsub
gv
hand
handle
handlers
handling
has
hash
hashes
have
heading
help
heredoc
hex
higher
highest
highlight
highlights
home
hook
i
id
ids
if
ignore
ignored
implicit
in
in
include
includes
including
incompat
increment
ind
indent
indentation
index
indices
inheritance
init
inject
inner
insert
inside
inspect
inspected
inspector
instance
instead
instruction
int
integer
interpolated
interrupt
invalid
investigate
invoke
irrelevant
is
issue
issues
it
item
iv
ivar
ivars
ix
join
joining
json
just
key
keys
keyword
keywords
kids
kind
known
kw
lambda
last
latest
layout
left
length
lengths
let
level
lhs
like
line
lineno
lines
link
lint
list
lit
literal
literals
ljust
load
loaded
loc
local
location
logical
long
longest
looks
loop
lstrip
lv
lvasgn
m
make
makedirs
map
margin
mark
match
matches
matching
max
members
mentioned
merge
merged
message
messages
meta
metadata
method
methods
middle
min
missing
mkdir
mktmpdir
mlhs
mobilized
mock
modifier
modifiers
module
morphemes
move
mrhs
mri
msg
multi
multiline
multiple
n
name
named
names
namespace
nested
nesting
new
newline
next
nil
no
node
nodes
non
none
not
note
now
ns
null
number
numbers
o
o1
o2
object
odd
of
offending
offense
offenses
offset
old
on
once
one
only
op
open
opening
oper
operand
operands
operation
operator
opposite
ops
opt
optarg
option
optional
options
or
ordered
orig
original
other
out
outer
output
overrides
own
pair
pairs
parameter
params
paren
parens
parent
parentheses
parenthesis
parse
parser
part
partition
parts
passed
path
pathname
paths
pattern
patterns
pending
penetrable
per
percent
phrase
pipe
plural
pluralize
plus
point
pop
popen3
popped
pos
position
possible
post
preceding
predicate
predicates
preferred
prefix
prepare
present
prev
previous
primitive
print
printed
printf
private
problem
proc
process
processed
processor
product
progressbar
proper
property
protected
pry
public
push
put
puts
pwd
q
question
quit
quotes
r
rails
rainbow
raise
range
ranges
raw
rb
read
reader
readline
real
really
realpath
realtime
reason
receive
receiver
recognized
reduce
reference
referenced
references
referencing
reg
regexp
register
regular
reject
rejected
relative
relevant
remaining
remote
remove
replace
replacement
report
require
required
requires
resbody
rescue
reset
reset
resolve
respond
rest
restored
result
retry
return
reverse
rewind
rewrite
rewriter
rhs
right
rindex
rocket
rockets
root
rstrip
rubocop
ruby
ruby19
run
s
safe
same
sb
scan
scanned
scope
search
second
section
sections
select
selected
selector
self
send
sentence
separator
sequence
set
setter
setup
severest
severity
shared
shift
short
shorthand
should
show
side
sides
singe
single
singleton
size
skip
slash
slashes
slice
smart
snake
so
sort
source
space
spaced
spaces
specifics
split
sprintf
square
src
stack
start
started
starts
state
stats
status
stderr
stdin
stdout
store
str
string
strip
style
styles
sub
subject
sum
summary
super
superclass
superset
support
supported
surrounding
switch
sym
symbol
symbolize
symbols
syntax
systmpdir
table
take
tap
target
targets
task
team
tempfile
terminator
ternary
text
the
thing
this
thread
throw
time
timeout
times
tmp
tmpdir
to
todo
token
tokenize
tokens
too
top
total
tr
tracker
trailing
trap
treat
trivial
true
tty
twisted
two
type
types
unary
unexpected
uniq
unique
unless
unnecessary
unrecognized
unshift
unused
upcase
updated
used
useless
user
uses
valid
validate
value
values
var
variable
variables
vars
verbose
version
virtual
visibility
void
wanted
wants
warn
warning
warnings
was
what
when
whens
while
whitelist
whitespace
whitespaces
whole
width
widths
with
without
word
words
working
world
wrap
writable
write
writer
yaml
yellow
zero
~
attribute
d
delim
deprecation
e1
e2
elem
element
entry
example
expectation
fake
force
fragment
inherit
instances
items
k
klass
l
masgn
opts
origin
p
param
scanning
sexp
spec
specified
steps
subclass
subnode
syms
t
t1
t2
v
validation
vasgn
x
